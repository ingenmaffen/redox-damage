use super::cpu::CPU;
use super::instructions;
use super::instructions::enums::InstructionSourceTarget;
use super::instructions::enums::JpOperands;
use super::memory::Memory;

pub fn execute_instruction(cpu: &mut CPU, memory: &mut Memory) {
    let operation: u8 = memory.addresses[cpu.pc as usize];
    handle_instruction(operation, cpu, memory);
}

fn handle_instruction(opcode: u8, cpu: &mut CPU, memory: &mut Memory) {
    // commented operations are not supported
    match opcode {
        0x00 => instructions::misc::nop(cpu),
        0x01 => instructions::load::ld_n16(cpu, memory, InstructionSourceTarget::BC),
        0x02 => instructions::load::ld_a_to_pointer(cpu, memory, InstructionSourceTarget::BcAsPointer),
        0x03 => instructions::increment::inc(cpu, InstructionSourceTarget::BC),
        0x04 => instructions::increment::inc(cpu, InstructionSourceTarget::B),
        0x05 => instructions::decrement::dec(cpu, InstructionSourceTarget::B),
        0x06 => instructions::load::ld_n8(cpu, memory, InstructionSourceTarget::B),
        0x07 => (), // RLCA
        0x08 => (), // LD [a16], SP
        0x09 => (), // ADD HL, BC
        0x0A => (), // LD A, [BC]
        0x0B => instructions::decrement::dec(cpu, InstructionSourceTarget::BC),
        0x0C => instructions::increment::inc(cpu, InstructionSourceTarget::C),
        0x0D => instructions::decrement::dec(cpu, InstructionSourceTarget::C),
        0x0E => instructions::load::ld_n8(cpu, memory, InstructionSourceTarget::C),
        0x0F => (), // RRCA
        0x10 => (), // STOP n8
        0x11 => instructions::load::ld_n16(cpu, memory, InstructionSourceTarget::DE),
        0x12 => instructions::load::ld_a_to_pointer(cpu, memory, InstructionSourceTarget::DeAsPointer),
        0x13 => instructions::increment::inc(cpu, InstructionSourceTarget::DE),
        0x14 => instructions::increment::inc(cpu, InstructionSourceTarget::D),
        0x15 => instructions::decrement::dec(cpu, InstructionSourceTarget::D),
        0x16 => instructions::load::ld_n8(cpu, memory, InstructionSourceTarget::D),
        0x17 => (), // RLA
        0x18 => (), // JR e8
        0x19 => (), // ADD HL, DE
        0x1A => (), // LD A, [DE]
        0x1B => instructions::decrement::dec(cpu, InstructionSourceTarget::DE),
        0x1C => instructions::increment::inc(cpu, InstructionSourceTarget::E),
        0x1D => instructions::decrement::dec(cpu, InstructionSourceTarget::E),
        0x1E => instructions::load::ld_n8(cpu, memory, InstructionSourceTarget::E),
        0x1F => (), // RRA
        0x20 => (), // JR NZ, e8
        0x21 => instructions::load::ld_n16(cpu, memory, InstructionSourceTarget::HL),
        0x22 => instructions::load::ld_a_to_pointer(cpu, memory, InstructionSourceTarget::HlPlus),
        0x23 => instructions::increment::inc(cpu, InstructionSourceTarget::HL),
        0x24 => instructions::increment::inc(cpu, InstructionSourceTarget::H),
        0x25 => instructions::decrement::dec(cpu, InstructionSourceTarget::H),
        0x26 => instructions::load::ld_n8(cpu, memory, InstructionSourceTarget::H),
        0x27 => (), // DAA
        0x28 => (), // JR Z, e8
        0x29 => (), // ADD HL, HL
        0x2A => (), // LD A, [HL+]
        0x2B => instructions::decrement::dec(cpu, InstructionSourceTarget::HL),
        0x2C => instructions::increment::inc(cpu, InstructionSourceTarget::L),
        0x2D => instructions::decrement::dec(cpu, InstructionSourceTarget::L),
        0x2E => instructions::load::ld_n8(cpu, memory, InstructionSourceTarget::L),
        0x2F => (), // CPL
        0x30 => (), // JR NC, e8
        0x31 => instructions::load::ld_n16(cpu, memory, InstructionSourceTarget::SP),
        0x32 => instructions::load::ld_a_to_pointer(cpu, memory, InstructionSourceTarget::HlMinus),
        0x33 => instructions::increment::inc(cpu, InstructionSourceTarget::SP),
        0x34 => instructions::increment::inc_r8_at_hl(cpu, memory),
        0x35 => instructions::decrement::dec_r8_at_hl(cpu, memory),
        0x36 => instructions::load::ld_n8(cpu, memory, InstructionSourceTarget::HlAsPointer),
        0x37 => (), // SCF
        0x38 => (), // JR C, e8
        0x39 => (), // ADD HL, SP
        0x3A => (), // LD A, [HL-]
        0x3B => instructions::decrement::dec(cpu, InstructionSourceTarget::SP),
        0x3C => instructions::increment::inc(cpu, InstructionSourceTarget::A),
        0x3D => instructions::decrement::dec(cpu, InstructionSourceTarget::A),
        0x3E => instructions::load::ld_n8(cpu, memory, InstructionSourceTarget::A),
        0x3F => (), // CCF
        0x40 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::B, InstructionSourceTarget::B),
        0x41 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::B, InstructionSourceTarget::C),
        0x42 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::B, InstructionSourceTarget::D),
        0x43 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::B, InstructionSourceTarget::E),
        0x44 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::B, InstructionSourceTarget::H),
        0x45 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::B, InstructionSourceTarget::L),
        0x46 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::B, InstructionSourceTarget::HlAsPointer),
        0x47 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::B, InstructionSourceTarget::A),
        0x48 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::C, InstructionSourceTarget::B),
        0x49 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::C, InstructionSourceTarget::C),
        0x4A => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::C, InstructionSourceTarget::D),
        0x4B => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::C, InstructionSourceTarget::E),
        0x4C => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::C, InstructionSourceTarget::H),
        0x4D => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::C, InstructionSourceTarget::L),
        0x4E => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::C, InstructionSourceTarget::HlAsPointer),
        0x4F => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::C, InstructionSourceTarget::A),
        0x50 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::D, InstructionSourceTarget::B),
        0x51 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::D, InstructionSourceTarget::C),
        0x52 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::D, InstructionSourceTarget::D),
        0x53 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::D, InstructionSourceTarget::E),
        0x54 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::D, InstructionSourceTarget::H),
        0x55 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::D, InstructionSourceTarget::L),
        0x56 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::D, InstructionSourceTarget::HlAsPointer),
        0x57 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::D, InstructionSourceTarget::A),
        0x58 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::E, InstructionSourceTarget::B),
        0x59 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::E, InstructionSourceTarget::C),
        0x5A => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::E, InstructionSourceTarget::D),
        0x5B => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::E, InstructionSourceTarget::E),
        0x5C => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::E, InstructionSourceTarget::H),
        0x5D => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::E, InstructionSourceTarget::L),
        0x5E => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::E, InstructionSourceTarget::HlAsPointer),
        0x5F => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::E, InstructionSourceTarget::A),
        0x60 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::H, InstructionSourceTarget::B),
        0x61 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::H, InstructionSourceTarget::C),
        0x62 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::H, InstructionSourceTarget::D),
        0x63 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::H, InstructionSourceTarget::E),
        0x64 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::H, InstructionSourceTarget::H),
        0x65 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::H, InstructionSourceTarget::L),
        0x66 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::H, InstructionSourceTarget::HlAsPointer),
        0x67 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::H, InstructionSourceTarget::A),
        0x68 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::L, InstructionSourceTarget::B),
        0x69 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::L, InstructionSourceTarget::C),
        0x6A => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::L, InstructionSourceTarget::D),
        0x6B => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::L, InstructionSourceTarget::E),
        0x6C => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::L, InstructionSourceTarget::H),
        0x6D => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::L, InstructionSourceTarget::L),
        0x6E => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::L, InstructionSourceTarget::HlAsPointer),
        0x6F => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::L, InstructionSourceTarget::A),
        0x70 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::HlAsPointer, InstructionSourceTarget::B),
        0x71 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::HlAsPointer, InstructionSourceTarget::C),
        0x72 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::HlAsPointer, InstructionSourceTarget::D),
        0x73 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::HlAsPointer, InstructionSourceTarget::E),
        0x74 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::HlAsPointer, InstructionSourceTarget::H),
        0x75 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::HlAsPointer, InstructionSourceTarget::L),
        0x76 => (), // HALT
        0x77 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::HlAsPointer, InstructionSourceTarget::A),
        0x78 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::A, InstructionSourceTarget::B),
        0x79 => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::A, InstructionSourceTarget::C),
        0x7A => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::A, InstructionSourceTarget::D),
        0x7B => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::A, InstructionSourceTarget::E),
        0x7C => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::A, InstructionSourceTarget::H),
        0x7D => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::A, InstructionSourceTarget::L),
        0x7E => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::A, InstructionSourceTarget::HlAsPointer),
        0x7F => instructions::load::ld_r8_r8(cpu, memory, InstructionSourceTarget::A, InstructionSourceTarget::A),
        0x80 => instructions::arithmetic::add(cpu, InstructionSourceTarget::B),
        0x81 => instructions::arithmetic::add(cpu, InstructionSourceTarget::C),
        0x82 => instructions::arithmetic::add(cpu, InstructionSourceTarget::D),
        0x83 => instructions::arithmetic::add(cpu, InstructionSourceTarget::E),
        0x84 => instructions::arithmetic::add(cpu, InstructionSourceTarget::H),
        0x85 => instructions::arithmetic::add(cpu, InstructionSourceTarget::L),
        0x86 => instructions::arithmetic::add_hl(cpu, memory),
        0x87 => instructions::arithmetic::add(cpu, InstructionSourceTarget::A),
        0x88 => instructions::arithmetic::adc(cpu, InstructionSourceTarget::B),
        0x89 => instructions::arithmetic::adc(cpu, InstructionSourceTarget::C),
        0x8A => instructions::arithmetic::adc(cpu, InstructionSourceTarget::D),
        0x8B => instructions::arithmetic::adc(cpu, InstructionSourceTarget::E),
        0x8C => instructions::arithmetic::adc(cpu, InstructionSourceTarget::H),
        0x8D => instructions::arithmetic::adc(cpu, InstructionSourceTarget::L),
        0x8E => instructions::arithmetic::adc_hl(cpu, memory),
        0x8F => instructions::arithmetic::adc(cpu, InstructionSourceTarget::A),
        0x90 => instructions::arithmetic::sub(cpu, InstructionSourceTarget::B),
        0x91 => instructions::arithmetic::sub(cpu, InstructionSourceTarget::C),
        0x92 => instructions::arithmetic::sub(cpu, InstructionSourceTarget::D),
        0x93 => instructions::arithmetic::sub(cpu, InstructionSourceTarget::E),
        0x94 => instructions::arithmetic::sub(cpu, InstructionSourceTarget::H),
        0x95 => instructions::arithmetic::sub(cpu, InstructionSourceTarget::L),
        0x96 => instructions::arithmetic::sub_hl(cpu, memory),
        0x97 => instructions::arithmetic::sub(cpu, InstructionSourceTarget::A),
        0x98 => instructions::arithmetic::sbc(cpu, InstructionSourceTarget::B),
        0x99 => instructions::arithmetic::sbc(cpu, InstructionSourceTarget::C),
        0x9A => instructions::arithmetic::sbc(cpu, InstructionSourceTarget::D),
        0x9B => instructions::arithmetic::sbc(cpu, InstructionSourceTarget::E),
        0x9C => instructions::arithmetic::sbc(cpu, InstructionSourceTarget::H),
        0x9D => instructions::arithmetic::sbc(cpu, InstructionSourceTarget::L),
        0x9E => instructions::arithmetic::sbc_hl(cpu, memory),
        0x9F => instructions::arithmetic::sbc(cpu, InstructionSourceTarget::A),
        0xA0 => (),
        0xA1 => (),
        0xA2 => (),
        0xA3 => (),
        0xA4 => (),
        0xA5 => (),
        0xA6 => (),
        0xA7 => (),
        0xA8 => (),
        0xA9 => (),
        0xAA => (),
        0xAB => (),
        0xAC => (),
        0xAD => (),
        0xAE => (),
        0xAF => (),
        0xB0 => (),
        0xB1 => (),
        0xB2 => (),
        0xB3 => (),
        0xB4 => (),
        0xB5 => (),
        0xB6 => (),
        0xB7 => (),
        0xB8 => (),
        0xB9 => (),
        0xBA => (),
        0xBB => (),
        0xBC => (),
        0xBD => (),
        0xBE => (),
        0xBF => (),
        0xC0 => (),
        0xC1 => (),
        0xC2 => instructions::jump::jp_with_operand(cpu, memory, JpOperands::NZ),
        0xC3 => instructions::jump::jp(cpu, memory),
        0xC4 => (),
        0xC5 => (),
        0xC6 => (),
        0xC7 => (),
        0xC8 => (),
        0xC9 => (),
        0xCA => instructions::jump::jp_with_operand(cpu, memory, JpOperands::Z),
        0xCB => (), // CB prefix
        0xCC => (),
        0xCD => (),
        0xCE => (),
        0xCF => (),
        0xD0 => (),
        0xD1 => (),
        0xD2 => instructions::jump::jp_with_operand(cpu, memory, JpOperands::NC),
        // 0xD3 => (),
        0xD4 => (),
        0xD5 => (),
        0xD6 => (),
        0xD7 => (),
        0xD8 => (),
        0xD9 => (),
        0xDA => instructions::jump::jp_with_operand(cpu, memory, JpOperands::C),
        // 0xDB => (),
        0xDC => (),
        // 0xDD => (),
        0xDE => (),
        0xDF => (),
        0xE0 => (),
        0xE1 => (),
        0xE2 => (),
        // 0xE3 => (),
        // 0xE4 => (),
        0xE5 => (),
        0xE6 => (),
        0xE7 => (),
        0xE8 => (),
        0xE9 => instructions::jump::jp_hl(cpu),
        0xEA => (),
        // 0xEB => (),
        // 0xEC => (),
        // 0xED => (),
        0xEE => (),
        0xEF => (),
        0xF0 => (),
        0xF1 => (),
        0xF2 => (),
        0xF3 => (),
        // 0xF4 => (),
        0xF5 => (),
        0xF6 => (),
        0xF7 => (),
        0xF8 => (),
        0xF9 => (),
        0xFA => (),
        0xFB => (),
        // 0xFC => (),
        // 0xFD => (),
        0xFE => (),
        0xFF => (),
        _ => panic!("Operation not supported"),
    }
}
